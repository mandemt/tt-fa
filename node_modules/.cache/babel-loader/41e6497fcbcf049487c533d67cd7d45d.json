{"ast":null,"code":"import data from '../components/data';\nimport { netteData } from './netteData.js';\nimport Home from './components/Home.js';\nexport function telData(invoer) {\n  let count = []; // nieuwe array met alle geselecteerde antwoorden uit de dataset\n\n  const counts = []; // nieuwe array met alle getelde geselecteerde antwoorden\n\n  data.forEach((filter, index) => {\n    // ga door alle regels in het .json bestand heen\n    const variable = data[index][invoer]; // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n\n    count.push(variable); // zet alleen deze vragen in een lege array\n  });\n  count.forEach(function (x) {\n    // neem elke regel uit deze array appart\n    counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n  });\n  netteData(counts);\n}","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/modules.js"],"names":["data","netteData","Home","telData","invoer","count","counts","forEach","filter","index","variable","push","x"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAQ,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC7B,MAAIC,KAAK,GAAG,EAAZ,CAD6B,CACd;;AACf,QAAMC,MAAM,GAAG,EAAf,CAF6B,CAEX;;AAElBN,EAAAA,IAAI,CAACO,OAAL,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAE;AAC9B,UAAMC,QAAQ,GAAGV,IAAI,CAACS,KAAD,CAAJ,CAAYL,MAAZ,CAAjB,CAD4B,CACS;;AACrCC,IAAAA,KAAK,CAACM,IAAN,CAAWD,QAAX,EAF4B,CAEP;AACxB,GAHD;AAKAL,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAUK,CAAV,EAAa;AAAE;AACzBN,IAAAA,MAAM,CAACM,CAAD,CAAN,GAAY,CAACN,MAAM,CAACM,CAAD,CAAN,IAAa,CAAd,IAAmB,CAA/B,CADuB,CACW;AACrC,GAFD;AAIAX,EAAAA,SAAS,CAACK,MAAD,CAAT;AACH","sourcesContent":["import data from '../components/data'\nimport {netteData} from './netteData.js'\nimport Home from './components/Home.js'\n\nexport  function telData(invoer) {\n    let count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\n    const counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\n\n    data.forEach((filter, index) => { // ga door alle regels in het .json bestand heen\n        const variable = data[index][invoer] // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n        count.push(variable) // zet alleen deze vragen in een lege array\n    })\n\n    count.forEach(function (x) { // neem elke regel uit deze array appart\n        counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n    });\n\n    netteData(counts)\n}\n\n"]},"metadata":{},"sourceType":"module"}