{"ast":null,"code":"var _jsxFileName = \"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/apidata.js\";\nimport React, { Component } from 'react';\nimport { halloDaar } from '../components/teldata.js';\nimport '../style/graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass API extends Component {\n  render() {\n    let ruweData = []; // Array voor de onbewerkte data\n\n    let schoneData = []; // Array voor opsgeschoonde data\n\n    function yolo() {\n      let request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \n\n      request.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Rembrandt+van+Rijn'); // De link naar de API. Een verschillend id zorgt voor andere resultaten.\n\n      request.onload = function () {\n        // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n        let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n\n        let kunstwerken = data.artObjects; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n\n        kunstwerken.forEach(kunstwerk => {\n          // Er wordt over alle (10) kunstwerken heengegaan\n          let titel = kunstwerk.title; // titel wordt beschreven\n\n          let locatie = kunstwerk.productionPlaces; // Waar het schilderij is geschreven\n\n          let afbeelding = kunstwerk.webImage; // De afbeelding en eigenschappen\n\n          ruweData.push(titel, locatie); // De onbewerkte data wordt aan de array toegevoegd\n\n          if (locatie.length <= 0) {\n            // Als er geen locatie is\n            locatie = [\"Niet bekend\"]; // Verander deze waarde naar 'niet bekend'\n          }\n\n          if (afbeelding == null) {\n            // Als er geen afbeelding beschikbaar is \n            afbeelding = \"geen afbeelding\"; // Verander deze waarde naar 'geen afbeelding'\n          } else {\n            afbeelding = kunstwerk.webImage.url; // Anders wordt de URL van de afbeelding teruggekeerd\n          }\n\n          schoneData.push({\n            \"Titel:\": titel,\n            \"Locatie geschidlerd\": locatie[0],\n            \"Afbeelding Link\": afbeelding\n          }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n        });\n        console.table(ruweData); // in de console komt nu een overzicht van de oude data en nieuwe data.\n      }.then(request.send() // De aanvraag wordt verstuurd.\n      );\n\n      console.log(request);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: yolo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default API;","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/apidata.js"],"names":["React","Component","halloDaar","API","render","ruweData","schoneData","yolo","request","XMLHttpRequest","open","onload","data","JSON","parse","response","kunstwerken","artObjects","forEach","kunstwerk","titel","title","locatie","productionPlaces","afbeelding","webImage","push","length","url","console","table","then","send","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,OAAO,oBAAP;;;AACC,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACvBG,EAAAA,MAAM,GAAE;AACL,QAAIC,QAAQ,GAAG,EAAf,CADK,CACc;;AACnB,QAAIC,UAAU,GAAG,EAAjB,CAFK,CAEgB;;AACrB,aAASC,IAAT,GAAe;AACf,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd,CADe,CACqB;;AACpCD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,6FAApB,EAFe,CAEoG;;AACnHF,MAAAA,OAAO,CAACG,MAAR,GAAiB,YAAY;AAAE;AAE3B,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACO,QAAnB,CAAX,CAFyB,CAEgB;;AACzC,YAAIC,WAAW,GAAGJ,IAAI,CAACK,UAAvB,CAHyB,CAGU;;AAEnCD,QAAAA,WAAW,CAACE,OAAZ,CAAoBC,SAAS,IAAI;AAAE;AAC/B,cAAIC,KAAK,GAAGD,SAAS,CAACE,KAAtB,CAD6B,CACA;;AAC7B,cAAIC,OAAO,GAAGH,SAAS,CAACI,gBAAxB,CAF6B,CAEa;;AAC1C,cAAIC,UAAU,GAAGL,SAAS,CAACM,QAA3B,CAH6B,CAGQ;;AACrCpB,UAAAA,QAAQ,CAACqB,IAAT,CAAcN,KAAd,EAAqBE,OAArB,EAJ6B,CAIE;;AAC/B,cAAIA,OAAO,CAACK,MAAR,IAAkB,CAAtB,EAAyB;AAAE;AACvBL,YAAAA,OAAO,GAAG,CAAC,aAAD,CAAV,CADqB,CACM;AAC9B;;AACD,cAAIE,UAAU,IAAI,IAAlB,EAAwB;AAAE;AACtBA,YAAAA,UAAU,GAAG,iBAAb,CADoB,CACY;AACnC,WAFD,MAGK;AACDA,YAAAA,UAAU,GAAGL,SAAS,CAACM,QAAV,CAAmBG,GAAhC,CADC,CACoC;AACxC;;AAEDtB,UAAAA,UAAU,CAACoB,IAAX,CAAgB;AAAE,sBAAUN,KAAZ;AAAmB,mCAAuBE,OAAO,CAAC,CAAD,CAAjD;AAAsD,+BAAmBE;AAAzE,WAAhB,EAf6B,CAe2E;AAE3G,SAjBD;AAkBAK,QAAAA,OAAO,CAACC,KAAR,CAAczB,QAAd,EAvByB,CAuBA;AAE5B,OAzBgB,CA0BhB0B,IA1BgB,CA2BjBvB,OAAO,CAACwB,IAAR,EA3BiB,CA2BF;AA3BE,OAAjB;;AA6BAH,MAAAA,OAAO,CAACI,GAAR,CAAYzB,OAAZ;AACC;;AAET,wBACI;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKE;;AA5C0B;;AA+C5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {halloDaar} from '../components/teldata.js'\nimport '../style/graph.css'\n class API extends Component{\n     render(){\n        let ruweData = []; // Array voor de onbewerkte data\n        let schoneData = []; // Array voor opsgeschoonde data\n        function yolo(){\n        let request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \n        request.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Rembrandt+van+Rijn') // De link naar de API. Een verschillend id zorgt voor andere resultaten.\n        request.onload = function () { // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n       \n            let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n            let kunstwerken = data.artObjects; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n    \n            kunstwerken.forEach(kunstwerk => { // Er wordt over alle (10) kunstwerken heengegaan\n                let titel = kunstwerk.title; // titel wordt beschreven\n                let locatie = kunstwerk.productionPlaces; // Waar het schilderij is geschreven\n                let afbeelding = kunstwerk.webImage; // De afbeelding en eigenschappen\n                ruweData.push(titel, locatie); // De onbewerkte data wordt aan de array toegevoegd\n                if (locatie.length <= 0) { // Als er geen locatie is\n                    locatie = [\"Niet bekend\"]; // Verander deze waarde naar 'niet bekend'\n                }\n                if (afbeelding == null) { // Als er geen afbeelding beschikbaar is \n                    afbeelding = \"geen afbeelding\"; // Verander deze waarde naar 'geen afbeelding'\n                }\n                else {\n                    afbeelding = kunstwerk.webImage.url; // Anders wordt de URL van de afbeelding teruggekeerd\n                }\n    \n                schoneData.push({ \"Titel:\": titel, \"Locatie geschidlerd\": locatie[0], \"Afbeelding Link\": afbeelding }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n    \n            })\n            console.table(ruweData); // in de console komt nu een overzicht van de oude data en nieuwe data.\n         \n        }\n        .then(\n        request.send() // De aanvraag wordt verstuurd.\n        )\n        console.log(request)\n        }\n        \nreturn(\n    <div>\n    <button onClick={yolo}></button>\n    </div>\n)\n }\n\n}\nexport default API"]},"metadata":{},"sourceType":"module"}