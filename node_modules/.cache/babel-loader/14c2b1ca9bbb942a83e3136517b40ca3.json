{"ast":null,"code":"var _jsxFileName = \"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport data from './data';\nimport * as d3 from 'd3';\nimport { telData } from './modules.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Contact extends Component {\n  render() {\n    function halloDaar() {\n      const margin = {\n        top: 50,\n        bottom: 50,\n        left: 150,\n        right: 50\n      }; // marges om op de grafiek toe te passen\n\n      const width = 500 - margin.left - margin.right; // breedte\n\n      const height = 500 - margin.top - margin.bottom; // hoogte\n\n      const svg = d3.select('main') // selecteer <main> element uit html\n      .append('svg') // het canvas voor de bar chart\n      .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n      .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\n      const groep = svg.append('g') // maak nieuw group element aan waar alle bars in zitten\n      .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\n      svg.append(\"text\").attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n      .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n      .text('Variabele'); // tekst\n\n      svg.append(\"text\").attr(\"transform\", \"translate(300,20)\").style(\"text-anchor\", \"middle\").text(\"Aantal keer voorgekomen in enquete\");\n      const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n\n      const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\n      const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n\n      const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\n      const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n\n      const g_yaxis = groep.append('g').attr('class', 'y axis');\n      d3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n      .on('change', function () {\n        // als er verandering wordt aangebracht\n        telData(this.value);\n      });\n\n      function netteData(counts) {\n        let geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n        let getal = Object.keys(counts); // de variabelen\n\n        let waarde = Object.values(counts); // de waarden\n\n        getal.forEach((x, index) => {\n          // van alle variabelen\n          const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n          geteldeArray.push({\n            \"getal\": x,\n            \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n\n          });\n        });\n        update(geteldeArray); // update met de bijbehorende  data\n\n        d3.select('input[type=\"range\"]') //  slider html element\n        .on('change', function () {\n          // als dit veranderd\n          filterData(this.value, geteldeArray);\n        });\n      }\n\n      function filterData(bereik, arr) {\n        const filtered_data = arr.filter(d => d.keer >= bereik); // filter door de array naar variabelen met een .keer boven de frequentie\n\n        update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n      }\n\n      function update(new_data) {\n        // updaten van de data\n        xscale.domain([0, d3.max(new_data, d => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n\n        yscale.domain(new_data.map(d => d.getal)); // hoeveel bars er moeten zijn\n\n        g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n\n        g_yaxis.transition().call(yaxis);\n        const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n        enter => {\n          //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n          const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n\n          return rect_enter;\n        }, update => update, // wat er gebeurd met de elementen die er al waren\n        exit => {\n          return exit.remove();\n        } // elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n        );\n        rect.transition() // De animatie om soepeler de verandering weer te geven\n        .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n        .attr('width', d => xscale(d.keer)) // de breedte van de balk\n        .attr('y', d => yscale(d.getal)); // de balk kom te staan bij de variabele\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bar chart mandemt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: halloDaar,\n          children: \"maak grafiek\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter hoe vaak iets mag voorkomen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"range\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"10\",\n          defaultValue: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"zin\",\n            selected: true,\n            children: \"Hoeveel zin heb je in de techtrack?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"verdieping\",\n            children: \"Op welke verdieping studeer je het liefste?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"zuivelproduct\",\n            children: \"Wat is je favoriete zuivelproduct?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"oogkleur\",\n            children: \"Wat is je oogkleur?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dier\",\n            children: \"Wat is je favoriete huisdier?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/Home.js"],"names":["React","Component","data","d3","telData","Contact","render","halloDaar","margin","top","bottom","left","right","width","height","svg","select","append","attr","groep","style","text","xscale","scaleLinear","range","yscale","scaleBand","rangeRound","paddingInner","xaxis","axisTop","scale","g_xaxis","yaxis","axisLeft","g_yaxis","on","value","netteData","counts","geteldeArray","getal","Object","keys","waarde","values","forEach","x","index","aantal","push","update","filterData","bereik","arr","filtered_data","filter","d","keer","new_data","domain","max","map","transition","call","rect","selectAll","join","enter","rect_enter","exit","remove","bandwidth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport data from './data'\nimport * as d3 from 'd3';\nimport {telData} from './modules.js'\nclass Contact extends Component{\n\n    render(){\n        function halloDaar() {\n            const margin = { top: 50, bottom: 50, left: 150, right: 50 }; // marges om op de grafiek toe te passen\n            const width = 500 - margin.left - margin.right; // breedte\n            const height = 500 - margin.top - margin.bottom; // hoogte\n            const svg = d3.select('main') // selecteer <main> element uit html\n                .append('svg')  // het canvas voor de bar chart\n                .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n                .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n        \n            const groep = svg.append('g')  // maak nieuw group element aan waar alle bars in zitten\n                .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n        \n            svg.append(\"text\")\n                .attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n                .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n                .text('Variabele'); // tekst\n        \n            svg.append(\"text\")\n                .attr(\"transform\", \"translate(300,20)\")\n                .style(\"text-anchor\", \"middle\")\n                .text(\"Aantal keer voorgekomen in enquete\");\n        \n        \n            const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n            const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n        \n            const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n            const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n        \n            const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n            const g_yaxis = groep.append('g').attr('class', 'y axis');\n        \n        \n            d3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n                .on('change', function () { // als er verandering wordt aangebracht\n                    telData(this.value)\n                })\n        \n   \n        \n        \n            function netteData(counts) {\n                let geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n        \n                let getal = Object.keys(counts) // de variabelen\n                let waarde = Object.values(counts) // de waarden\n        \n                getal.forEach((x, index) => { // van alle variabelen\n        \n                    const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n        \n                    geteldeArray.push({\n                        \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n                    })\n                })\n                update(geteldeArray) // update met de bijbehorende  data\n        \n                d3.select('input[type=\"range\"]') //  slider html element\n                    .on('change', function () { // als dit veranderd\n                        filterData(this.value, geteldeArray)\n                    });\n            }\n        \n        \n            function filterData(bereik, arr) {\n                const filtered_data = arr.filter((d) => d.keer >= bereik) // filter door de array naar variabelen met een .keer boven de frequentie\n                update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n            }\n        \n        \n        function update(new_data) { // updaten van de data\n        \n            xscale.domain([0, d3.max(new_data, (d) => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n            yscale.domain(new_data.map((d) => d.getal)); // hoeveel bars er moeten zijn\n            g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n            g_yaxis.transition().call(yaxis);\n        \n            const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n        \n                (enter) => { //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n        \n                    const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n                    return rect_enter;\n        \n                },\n                (update) => update,\n                // wat er gebeurd met de elementen die er al waren\n                (exit) => {\n        \n                    return exit.remove()\n                }// elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n        \n            );\n        \n            rect.transition() // De animatie om soepeler de verandering weer te geven\n                .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n                .attr('width', (d) => xscale(d.keer)) // de breedte van de balk\n                .attr('y', (d) => yscale(d.getal)) // de balk kom te staan bij de variabele\n        }\n        }\nreturn(\n    <body>\n\n    <h1>Bar chart mandemt</h1>\n    <div id=\"filter\">\n        <button onClick={halloDaar}>maak grafiek</button>\n        <h3>Filter hoe vaak iets mag voorkomen:</h3>\n        <label id=\"range\">\n            <p>0</p>\n            <p>1</p>\n            <p>2</p>\n            <p>3</p>\n            <p>4</p>\n            <p>5</p>\n            <p>6</p>\n            <p>7</p>\n            <p>8</p>\n            <p>9</p>\n            <p>10</p>\n        </label>\n\n        <input type=\"range\" min=\"0\" max=\"10\" defaultValue='5' ></input>\n\n        <select name=\"filter\">\n            <option value=\"zin\" selected>Hoeveel zin heb je in de techtrack?</option>\n            <option value=\"verdieping\">Op welke verdieping studeer je het liefste?</option>\n            <option value=\"zuivelproduct\">Wat is je favoriete zuivelproduct?</option>\n            <option value=\"oogkleur\">Wat is je oogkleur?</option>\n            <option value=\"dier\">Wat is je favoriete huisdier?</option>\n        </select>\n\n    </div>\n    <main> </main>\n</body>\n)\n}\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}