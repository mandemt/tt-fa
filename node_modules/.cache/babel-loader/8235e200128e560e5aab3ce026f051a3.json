{"ast":null,"code":"import { update } from './updateData.js';\nimport * as d3 from 'd3';\nexport function netteData(counts) {\n  let geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n  let getal = Object.keys(counts); // de variabelen\n\n  let waarde = Object.values(counts); // de waarden\n\n  getal.forEach((x, index) => {\n    // van alle variabelen\n    const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n    geteldeArray.push({\n      \"getal\": x,\n      \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n\n    });\n  });\n  update(geteldeArray); // update met de bijbehorende  data\n\n  d3.select('input[type=\"range\"]') //  slider html element\n  .on('change', function () {\n    // als dit veranderd\n    filterData(this.value, geteldeArray);\n  });\n}\n\nfunction filterData(bereik, arr) {\n  const filtered_data = arr.filter(d => d.keer >= bereik); // filter door de array naar variabelen met een .keer boven de frequentie\n\n  update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n}","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/netteData.js"],"names":["update","d3","netteData","counts","geteldeArray","getal","Object","keys","waarde","values","forEach","x","index","aantal","push","select","on","filterData","value","bereik","arr","filtered_data","filter","d","keer"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,iBAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAQ,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAC/B,MAAIC,YAAY,GAAG,EAAnB,CAD+B,CACT;;AAEtB,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAZ,CAH+B,CAGC;;AAChC,MAAIK,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAcN,MAAd,CAAb,CAJ+B,CAII;;AAEnCE,EAAAA,KAAK,CAACK,OAAN,CAAc,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAAE;AAE1B,UAAMC,MAAM,GAAGL,MAAM,CAACI,KAAD,CAArB,CAFwB,CAEM;;AAE9BR,IAAAA,YAAY,CAACU,IAAb,CAAkB;AACd,eAASH,CADK;AACF,cAAQE,MADN,CACa;;AADb,KAAlB;AAGH,GAPD;AAQAb,EAAAA,MAAM,CAACI,YAAD,CAAN,CAd+B,CAcV;;AAErBH,EAAAA,EAAE,CAACc,MAAH,CAAU,qBAAV,EAAiC;AAAjC,GACKC,EADL,CACQ,QADR,EACkB,YAAY;AAAE;AACxBC,IAAAA,UAAU,CAAC,KAAKC,KAAN,EAAad,YAAb,CAAV;AACH,GAHL;AAIH;;AACD,SAASa,UAAT,CAAoBE,MAApB,EAA4BC,GAA5B,EAAiC;AAC7B,QAAMC,aAAa,GAAGD,GAAG,CAACE,MAAJ,CAAYC,CAAD,IAAOA,CAAC,CAACC,IAAF,IAAUL,MAA5B,CAAtB,CAD6B,CAC6B;;AAC1DnB,EAAAA,MAAM,CAACqB,aAAD,CAAN,CAF6B,CAEN;AAC1B","sourcesContent":["import {update} from './updateData.js'\nimport * as d3 from 'd3'\nexport  function netteData(counts) {\n    let geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n    let getal = Object.keys(counts) // de variabelen\n    let waarde = Object.values(counts) // de waarden\n\n    getal.forEach((x, index) => { // van alle variabelen\n\n        const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n        geteldeArray.push({\n            \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n        })\n    })\n    update(geteldeArray) // update met de bijbehorende  data\n\n    d3.select('input[type=\"range\"]') //  slider html element\n        .on('change', function () { // als dit veranderd\n            filterData(this.value, geteldeArray)\n        });\n}\nfunction filterData(bereik, arr) {\n    const filtered_data = arr.filter((d) => d.keer >= bereik) // filter door de array naar variabelen met een .keer boven de frequentie\n    update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n}"]},"metadata":{},"sourceType":"module"}