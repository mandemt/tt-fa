{"ast":null,"code":"export default function request() {\n  var ruweData = []; // Array voor de onbewerkte data\n\n  var schoneData = []; // Array voor opsgeschoonde data\n\n  function yolo() {\n    let request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \n\n    request.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Rembrandt+van+Rijn'); // De link naar de API. Een verschillend id zorgt voor andere resultaten.\n\n    request.onload = function () {\n      // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n      let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n\n      let kunstwerken = data.artObjects; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n\n      kunstwerken.forEach(kunstwerk => {\n        // Er wordt over alle (10) kunstwerken heengegaan\n        let titel = kunstwerk.title; // titel wordt beschreven\n\n        let locatie = kunstwerk.productionPlaces; // Waar het schilderij is geschreven\n\n        let afbeelding = kunstwerk.webImage; // De afbeelding en eigenschappen\n\n        ruweData.push(titel, locatie); // De onbewerkte data wordt aan de array toegevoegd\n\n        if (locatie.length <= 0) {\n          // Als er geen locatie is\n          locatie = [\"Niet bekend\"]; // Verander deze waarde naar 'niet bekend'\n        }\n\n        if (afbeelding == null) {\n          // Als er geen afbeelding beschikbaar is \n          afbeelding = \"geen afbeelding\"; // Verander deze waarde naar 'geen afbeelding'\n        } else {\n          afbeelding = kunstwerk.webImage.url; // Anders wordt de URL van de afbeelding teruggekeerd\n        }\n\n        schoneData.push({\n          \"Titel:\": titel,\n          \"Locatie geschidlerd\": locatie[0],\n          \"Afbeelding Link\": afbeelding\n        }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n      });\n      console.table(ruweData); // in de console komt nu een overzicht van de oude data en nieuwe data.\n    };\n\n    request.send(); // De aanvraag wordt verstuurd.\n\n    console.log(request);\n  }\n}","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/request.js"],"names":["request","ruweData","schoneData","yolo","XMLHttpRequest","open","onload","data","JSON","parse","response","kunstwerken","artObjects","forEach","kunstwerk","titel","title","locatie","productionPlaces","afbeelding","webImage","push","length","url","console","table","send","log"],"mappings":"AAAA,eAAe,SAASA,OAAT,GAAmB;AAClC,MAAIC,QAAQ,GAAG,EAAf,CADkC,CACf;;AACnB,MAAIC,UAAU,GAAG,EAAjB,CAFkC,CAEb;;AACrB,WAASC,IAAT,GAAe;AACf,QAAIH,OAAO,GAAG,IAAII,cAAJ,EAAd,CADe,CACqB;;AACpCJ,IAAAA,OAAO,CAACK,IAAR,CAAa,KAAb,EAAoB,6FAApB,EAFe,CAEoG;;AACnHL,IAAAA,OAAO,CAACM,MAAR,GAAiB,YAAY;AAAE;AAE3B,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,QAAnB,CAAX,CAFyB,CAEgB;;AACzC,UAAIC,WAAW,GAAGJ,IAAI,CAACK,UAAvB,CAHyB,CAGU;;AAEnCD,MAAAA,WAAW,CAACE,OAAZ,CAAoBC,SAAS,IAAI;AAAE;AAC/B,YAAIC,KAAK,GAAGD,SAAS,CAACE,KAAtB,CAD6B,CACA;;AAC7B,YAAIC,OAAO,GAAGH,SAAS,CAACI,gBAAxB,CAF6B,CAEa;;AAC1C,YAAIC,UAAU,GAAGL,SAAS,CAACM,QAA3B,CAH6B,CAGQ;;AACrCnB,QAAAA,QAAQ,CAACoB,IAAT,CAAcN,KAAd,EAAqBE,OAArB,EAJ6B,CAIE;;AAC/B,YAAIA,OAAO,CAACK,MAAR,IAAkB,CAAtB,EAAyB;AAAE;AACvBL,UAAAA,OAAO,GAAG,CAAC,aAAD,CAAV,CADqB,CACM;AAC9B;;AACD,YAAIE,UAAU,IAAI,IAAlB,EAAwB;AAAE;AACtBA,UAAAA,UAAU,GAAG,iBAAb,CADoB,CACY;AACnC,SAFD,MAGK;AACDA,UAAAA,UAAU,GAAGL,SAAS,CAACM,QAAV,CAAmBG,GAAhC,CADC,CACoC;AACxC;;AAEDrB,QAAAA,UAAU,CAACmB,IAAX,CAAgB;AAAE,oBAAUN,KAAZ;AAAmB,iCAAuBE,OAAO,CAAC,CAAD,CAAjD;AAAsD,6BAAmBE;AAAzE,SAAhB,EAf6B,CAe2E;AAE3G,OAjBD;AAkBAK,MAAAA,OAAO,CAACC,KAAR,CAAcxB,QAAd,EAvByB,CAuBA;AAE5B,KAzBD;;AA0BAD,IAAAA,OAAO,CAAC0B,IAAR,GA7Be,CA6BA;;AACfF,IAAAA,OAAO,CAACG,GAAR,CAAY3B,OAAZ;AACC;AACA","sourcesContent":["export default function request() {\nvar ruweData = []; // Array voor de onbewerkte data\nvar schoneData = []; // Array voor opsgeschoonde data\nfunction yolo(){\nlet request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \nrequest.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Rembrandt+van+Rijn') // De link naar de API. Een verschillend id zorgt voor andere resultaten.\nrequest.onload = function () { // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n\n    let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n    let kunstwerken = data.artObjects; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n\n    kunstwerken.forEach(kunstwerk => { // Er wordt over alle (10) kunstwerken heengegaan\n        let titel = kunstwerk.title; // titel wordt beschreven\n        let locatie = kunstwerk.productionPlaces; // Waar het schilderij is geschreven\n        let afbeelding = kunstwerk.webImage; // De afbeelding en eigenschappen\n        ruweData.push(titel, locatie); // De onbewerkte data wordt aan de array toegevoegd\n        if (locatie.length <= 0) { // Als er geen locatie is\n            locatie = [\"Niet bekend\"]; // Verander deze waarde naar 'niet bekend'\n        }\n        if (afbeelding == null) { // Als er geen afbeelding beschikbaar is \n            afbeelding = \"geen afbeelding\"; // Verander deze waarde naar 'geen afbeelding'\n        }\n        else {\n            afbeelding = kunstwerk.webImage.url; // Anders wordt de URL van de afbeelding teruggekeerd\n        }\n\n        schoneData.push({ \"Titel:\": titel, \"Locatie geschidlerd\": locatie[0], \"Afbeelding Link\": afbeelding }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n\n    })\n    console.table(ruweData); // in de console komt nu een overzicht van de oude data en nieuwe data.\n \n}\nrequest.send() // De aanvraag wordt verstuurd.\nconsole.log(request)\n}\n}\n"]},"metadata":{},"sourceType":"module"}