{"ast":null,"code":"import { image } from \"d3-fetch\";\nimport { render } from \"ejs\";\nimport * as d3 from 'd3';\nexport default function request() {\n  var ruweData = []; // Array voor de onbewerkte data\n\n  var schoneData = []; // Array voor opsgeschoonde data\n\n  let request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \n\n  let input = document.querySelector('input');\n  let id = input.value;\n  request.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection?key=' + API_KEY + '&involvedMaker=' + id); // De link naar de API. Een verschillend id zorgt voor andere resultaten.\n\n  request.onload = function () {\n    // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n    let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n\n    let kleuren = data.facets[6].facets; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n\n    console.log(kleuren);\n    console.log(data);\n    let allekleuren = [];\n    kleuren.forEach(kleur => {\n      // Er wordt over alle (10) kunstwerken heengegaan\n      allekleuren.push(kleur.key);\n    });\n    let vierkant1 = document.querySelector('.dinges:first-of-type');\n    let vierkant2 = document.querySelector('.dinges:nth-of-type(2)');\n    let vierkant3 = document.querySelector('.dinges:nth-of-type(3)');\n    let vierkant4 = document.querySelector('.dinges:nth-of-type(4)');\n    let vierkant5 = document.querySelector('.dinges:nth-of-type(5)');\n    const squares = [vierkant1, vierkant2, vierkant3, vierkant4, vierkant5];\n    allekleuren.slice(-5).forEach((kleur, i) => {\n      squares[i].style.backgroundColor = kleur;\n    });\n  };\n\n  request.send(); // De aanvraag wordt verstuurd.\n\n  console.log(request);\n}","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/request.js"],"names":["image","render","d3","request","ruweData","schoneData","XMLHttpRequest","input","document","querySelector","id","value","open","API_KEY","onload","data","JSON","parse","response","kleuren","facets","console","log","allekleuren","forEach","kleur","push","key","vierkant1","vierkant2","vierkant3","vierkant4","vierkant5","squares","slice","i","style","backgroundColor","send"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAClC,MAAIC,QAAQ,GAAG,EAAf,CADkC,CACf;;AACnB,MAAIC,UAAU,GAAG,EAAjB,CAFkC,CAEb;;AACrB,MAAIF,OAAO,GAAG,IAAIG,cAAJ,EAAd,CAHkC,CAGE;;AACpC,MAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACA,MAAIC,EAAE,GAAGH,KAAK,CAACI,KAAf;AACAR,EAAAA,OAAO,CAACS,IAAR,CAAa,KAAb,EAAoB,sDAAsDC,OAAtD,GAA+D,iBAA/D,GAAmFH,EAAvG,EANkC,CAMyE;;AAC3GP,EAAAA,OAAO,CAACW,MAAR,GAAiB,YAAY;AAAE;AAC3B,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACe,QAAnB,CAAX,CADyB,CACgB;;AACzC,QAAIC,OAAO,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeA,MAA7B,CAFyB,CAEY;;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,QAAIQ,WAAW,GAAG,EAAlB;AACIJ,IAAAA,OAAO,CAACK,OAAR,CAAgBC,KAAK,IAAI;AAAE;AACvBF,MAAAA,WAAW,CAACG,IAAZ,CAAiBD,KAAK,CAACE,GAAvB;AACC,KAFL;AAGD,QAAIC,SAAS,GAAMpB,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAAnB;AACA,QAAIoB,SAAS,GAAMrB,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAAnB;AACA,QAAIqB,SAAS,GAAOtB,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAApB;AACA,QAAIsB,SAAS,GAAOvB,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAApB;AACA,QAAIuB,SAAS,GAAOxB,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAApB;AAEA,UAAMwB,OAAO,GAAG,CAACL,SAAD,EAAWC,SAAX,EAAqBC,SAArB,EAA+BC,SAA/B,EAAyCC,SAAzC,CAAhB;AAEFT,IAAAA,WAAW,CAACW,KAAZ,CAAkB,CAAC,CAAnB,EAAsBV,OAAtB,CAA8B,CAACC,KAAD,EAAQU,CAAR,KAAc;AACxCF,MAAAA,OAAO,CAACE,CAAD,CAAP,CAAWC,KAAX,CAAiBC,eAAjB,GAAmCZ,KAAnC;AACH,KAFD;AAGA,GApBD;;AAqBAtB,EAAAA,OAAO,CAACmC,IAAR,GA5BkC,CA4BnB;;AACfjB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACC","sourcesContent":["import { image } from \"d3-fetch\";\nimport { render } from \"ejs\";\nimport * as d3 from 'd3';\n\nexport default function request() {\nvar ruweData = []; // Array voor de onbewerkte data\nvar schoneData = []; // Array voor opsgeschoonde data\nlet request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \nlet input = document.querySelector('input')\nlet id = input.value\nrequest.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection?key=' + API_KEY +'&involvedMaker=' + id) // De link naar de API. Een verschillend id zorgt voor andere resultaten.\nrequest.onload = function () { // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n    let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n    let kleuren = data.facets[6].facets; // Ik haal de specifieke variabele uit de kunstenaar uit id.\nconsole.log(kleuren)\nconsole.log(data)\nlet allekleuren = []\n    kleuren.forEach(kleur => { // Er wordt over alle (10) kunstwerken heengegaan\n        allekleuren.push(kleur.key)\n        })\n   let vierkant1 =    document.querySelector('.dinges:first-of-type')\n   let vierkant2 =    document.querySelector('.dinges:nth-of-type(2)')\n   let vierkant3 =     document.querySelector('.dinges:nth-of-type(3)')\n   let vierkant4 =     document.querySelector('.dinges:nth-of-type(4)')\n   let vierkant5 =     document.querySelector('.dinges:nth-of-type(5)')\n    \n   const squares = [vierkant1,vierkant2,vierkant3,vierkant4,vierkant5]\n\n allekleuren.slice(-5).forEach((kleur, i) => {\n     squares[i].style.backgroundColor = kleur\n })\n}\nrequest.send() // De aanvraag wordt verstuurd.\nconsole.log(request)\n}\n\n"]},"metadata":{},"sourceType":"module"}