{"ast":null,"code":"var _jsxFileName = \"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Barchart from './components/Barchart.js';\nimport * as d3 from 'd3';\nimport data from './components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  console.log('he');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar chart mandemt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter hoe vaak iets mag voorkomen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"range\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"10\",\n        defaultValue: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"zin\",\n          selected: true,\n          children: \"Hoeveel zin heb je in de techtrack?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verdieping\",\n          children: \"Op welke verdieping studeer je het liefste?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"zuivelproduct\",\n          children: \"Wat is je favoriete zuivelproduct?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"oogkleur\",\n          children: \"Wat is je oogkleur?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dier\",\n          children: \"Wat is je favoriete huisdier?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Chart;\nconst margin = {\n  top: 50,\n  bottom: 50,\n  left: 150,\n  right: 50\n}; // marges om op de grafiek toe te passen\n\nconst width = 500 - margin.left - margin.right; // breedte\n\nconst height = 500 - margin.top - margin.bottom; // hoogte\n\nd3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n.on('change', verander); // dinges.addEventListener(\"click\", verander)\n\nfunction verander() {\n  // als er verandering wordt aangebracht\n  let count = []; // nieuwe array met alle geselecteerde antwoorden uit de dataset\n\n  const counts = []; // nieuwe array met alle getelde geselecteerde antwoorden\n\n  var geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n  let vraag = this.value; // De gefilterde vraag\n\n  data.forEach((filter, index) => {\n    // ga door alle regels in het .json bestand heen\n    const variable = data[index][vraag]; // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n\n    count.push(variable); // zet alleen deze vragen in een lege array\n  });\n  count.forEach(function (x) {\n    // neem elke regel uit deze array appart\n    counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n  });\n  let getal = Object.keys(counts); // de variabelen\n\n  let waarde = Object.values(counts); // de waarden\n\n  getal.forEach((x, index) => {\n    // van alle variabelen\n    const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n    geteldeArray.push({\n      \"getal\": x,\n      \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n\n    });\n  });\n  d3.select('input[type=\"range\"]') //  slider html element\n  .on('change', function () {\n    // als dit veranderd\n    let frequentie = this.value; // de geselecteerde frequentie is het nummer in de slider\n\n    const filtered_data = geteldeArray.filter(d => d.keer >= frequentie); // filter door de array naar variabelen met een .keer boven de frequentie\n\n    update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n  });\n  update(geteldeArray); // update met de bijbehorende  data\n}\n\nconst svg = d3.select('main') // selecteer <main> element uit html\n.append('svg') // het canvast voor de bar chart\n.attr('width', width + margin.left + margin.right) // de breedte van het svg element\n.attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\nconst groep = svg.append('g') // maak nieuw group element aan waar alle bars in zitten\n.attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\nconst xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n\nconst yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\nconst xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n\nconst g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\nconst yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n\nconst g_yaxis = groep.append('g').attr('class', 'y axis'); // Label voor verticale  as\n\nsvg.append(\"text\").attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n.style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n.text('Variabele'); // tekst\n// label voor horizontale as \n\nsvg.append(\"text\").attr(\"transform\", \"translate(300,20)\").style(\"text-anchor\", \"middle\").text(\"Aantal keer voorgekomen in enquete\");\n\nfunction update(new_data) {\n  // updaten van de data\n  xscale.domain([0, d3.max(new_data, d => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n\n  yscale.domain(new_data.map(d => d.getal)); // hoeveel bars er moeten zijn\n\n  g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n\n  g_yaxis.transition().call(yaxis);\n  const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n  enter => {\n    //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n    const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n\n    return rect_enter;\n  }, update => update, // wat er gebeurd met de elementen die er al waren\n  exit => {\n    return exit.remove();\n  } // elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n  );\n  rect.transition() // De animatie om soepeler de verandering weer te geven\n  .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n  .attr('width', d => xscale(d.keer)) // de breedte van de balk\n  .attr('y', d => yscale(d.getal)); // de balk kom te staan bij de variabele\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js"],"names":["Barchart","d3","data","Chart","console","log","margin","top","bottom","left","right","width","height","select","on","verander","count","counts","geteldeArray","vraag","value","forEach","filter","index","variable","push","x","getal","Object","keys","waarde","values","aantal","frequentie","filtered_data","d","keer","update","svg","append","attr","groep","xscale","scaleLinear","range","yscale","scaleBand","rangeRound","paddingInner","xaxis","axisTop","scale","g_xaxis","yaxis","axisLeft","g_yaxis","style","text","new_data","domain","max","map","transition","call","rect","selectAll","join","enter","rect_enter","exit","remove","bandwidth","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Barchart from './components/Barchart.js'\nimport * as d3 from 'd3';\nimport data from './components/data'\n\nfunction Chart(){\n  console.log('he')\n  return(\n    <>\n    <h1>Bar chart mandemt</h1>\n    <div id=\"filter\">\n      <h3>Filter hoe vaak iets mag voorkomen:</h3>\n      <label id=\"range\">\n        <p>0</p>\n        <p>1</p>\n        <p>2</p>\n        <p>3</p>\n        <p>4</p>\n        <p>5</p>\n        <p>6</p>\n        <p>7</p>\n        <p>8</p>\n        <p>9</p>\n        <p>10</p>\n      </label>\n  \n      <input type=\"range\" min=\"0\" max=\"10\" defaultValue=\"5\"></input>\n      <select name=\"filter\">\n        <option value=\"zin\" selected>Hoeveel zin heb je in de techtrack?</option>\n        <option value=\"verdieping\">Op welke verdieping studeer je het liefste?</option>\n        <option value=\"zuivelproduct\">Wat is je favoriete zuivelproduct?</option>\n        <option value=\"oogkleur\">Wat is je oogkleur?</option>\n        <option value=\"dier\">Wat is je favoriete huisdier?</option>\n      </select>\n  \n    </div>\n    <main> </main>\n    </>\n  )\n}\n\nconst margin = { top: 50, bottom: 50, left: 150, right: 50 }; // marges om op de grafiek toe te passen\nconst width = 500 - margin.left - margin.right; // breedte\nconst height = 500 - margin.top - margin.bottom; // hoogte\n\n\nd3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n.on('change', verander)\n// dinges.addEventListener(\"click\", verander)\n    function verander() { // als er verandering wordt aangebracht\n        let count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\n        const counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\n        var geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n        let vraag = this.value // De gefilterde vraag\n\n        data.forEach((filter, index) => { // ga door alle regels in het .json bestand heen\n            const variable = data[index][vraag] // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n            count.push(variable) // zet alleen deze vragen in een lege array\n        })\n\n        count.forEach(function (x) { // neem elke regel uit deze array appart\n            counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n        });\n\n        let getal = Object.keys(counts) // de variabelen\n        let waarde = Object.values(counts) // de waarden\n\n        getal.forEach((x, index) => { // van alle variabelen\n\n            const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n            geteldeArray.push({\n                \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n            })\n        })\n\n        d3.select('input[type=\"range\"]') //  slider html element\n            .on('change', function () { // als dit veranderd\n                let frequentie = this.value // de geselecteerde frequentie is het nummer in de slider\n                const filtered_data = geteldeArray.filter((d) => d.keer >= frequentie) // filter door de array naar variabelen met een .keer boven de frequentie\n                update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n            });\n\n        update(geteldeArray) // update met de bijbehorende  data\n    }\n  \n    const svg = d3.select('main') // selecteer <main> element uit html\n    .append('svg')  // het canvast voor de bar chart\n    .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n    .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\nconst groep = svg.append('g')  // maak nieuw group element aan waar alle bars in zitten\n    .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\nconst xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\nconst yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\nconst xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\nconst g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\nconst yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\nconst g_yaxis = groep.append('g').attr('class', 'y axis');\n\n// Label voor verticale  as\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n    .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n    .text('Variabele'); // tekst\n\n\n// label voor horizontale as \nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(300,20)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(\"Aantal keer voorgekomen in enquete\");\n\nfunction update(new_data) { // updaten van de data\n\n    xscale.domain([0, d3.max(new_data, (d) => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n    yscale.domain(new_data.map((d) => d.getal)); // hoeveel bars er moeten zijn\n    g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n    g_yaxis.transition().call(yaxis);\n\n    const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n\n        (enter) => { //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n\n            const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n            return rect_enter;\n\n        },\n        (update) => update,\n        // wat er gebeurd met de elementen die er al waren\n        (exit) =>{\n\n           return exit.remove() \n        }// elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n\n    );\n    rect.transition() // De animatie om soepeler de verandering weer te geven\n        .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n        .attr('width', (d) => xscale(d.keer)) // de breedte van de balk\n        .attr('y', (d) => yscale(d.getal)) // de balk kom te staan bij de variabele\n    }\n\n  \n\nfunction App(){\n\n  return(\n    <>\n    <Chart/>\n    </>\n  )\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}