{"ast":null,"code":"var _jsxFileName = \"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css'; // import Barchart from './components/Barchart.js'\n\nimport * as d3 from 'd3';\nimport data from './components/data';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 50,\n  bottom: 50,\n  left: 150,\n  right: 50\n}; // marges om op de grafiek toe te passen\n\nconst width = 500 - margin.left - margin.right; // breedte\n\nconst height = 500 - margin.top - margin.bottom; // hoogte\n\nlet count = []; // nieuwe array met alle geselecteerde antwoorden uit de dataset\n\nconst counts = []; // nieuwe array met alle getelde geselecteerde antwoorden\n\nvar geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\nfunction loadData(waarde) {\n  telData(waarde.target.value);\n}\n\nfunction telData(invoer) {\n  let count = []; // nieuwe array met alle geselecteerde antwoorden uit de dataset\n\n  const counts = []; // nieuwe array met alle getelde geselecteerde antwoorden\n\n  var geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n  data.forEach((filter, index) => {\n    // ga door alle regels in het .json bestand heen\n    const variable = data[index][invoer]; // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n\n    count.push(variable); // zet alleen deze vragen in een lege array\n  });\n  count.forEach(function (x) {\n    // neem elke regel uit deze array appart\n    counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n  });\n  let getal = Object.keys(counts); // de variabelen\n\n  let waarde = Object.values(counts); // de waarden\n\n  getal.forEach((x, index) => {\n    // van alle variabelen\n    const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n    geteldeArray.push({\n      \"getal\": x,\n      \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n\n    });\n  }); // update(geteldeArray) // update met de bijbehorende  data\n\n  console.log(geteldeArray);\n  d3.select('input[type=\"range\"]') //  slider html element\n  .on('change', function () {\n    // als dit veranderd\n    filterData(this.value);\n  });\n\n  function filterData(bereik) {\n    const filtered_data = geteldeArray.filter(d => d.keer >= bereik); // filter door de array naar variabelen met een .keer boven de frequentie\n\n    update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n    // console.log(filtered_data)\n  }\n\n  const svg = d3.select('main') // selecteer <main> element uit html\n  .append('svg') // het canvast voor de bar chart\n  .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n  .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\n  const groep = svg.append('g') // maak nieuw group element aan waar alle bars in zitten\n  .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\n  const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n\n  const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\n  const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n\n  const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\n  const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n\n  const g_yaxis = groep.append('g').attr('class', 'y axis'); // Label voor verticale  as\n\n  svg.append(\"text\").attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n  .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n  .text('Variabele'); // tekst\n  // label voor horizontale as \n\n  svg.append(\"text\").attr(\"transform\", \"translate(300,20)\").style(\"text-anchor\", \"middle\").text(\"Aantal keer voorgekomen in enquete\");\n\n  function update(new_data) {\n    // updaten van de data\n    xscale.domain([0, d3.max(new_data, d => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n\n    yscale.domain(new_data.map(d => d.getal)); // hoeveel bars er moeten zijn\n\n    g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n\n    g_yaxis.transition().call(yaxis);\n    const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n    enter => {\n      //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n      const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n\n      return rect_enter;\n    }, update => update, // wat er gebeurd met de elementen die er al waren\n    exit => {\n      return exit.remove();\n    } // elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n    );\n    rect.transition() // De animatie om soepeler de verandering weer te geven\n    .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n    .attr('width', d => xscale(d.keer)) // de breedte van de balk\n    .attr('y', d => yscale(d.getal)); // de balk kom te staan bij de variabele\n  }\n}\n\nfunction mooiData() {\n  console.log('mooidata');\n}\n\nfunction Chart() {\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar chart mandemt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter hoe vaak iets mag voorkomen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"range\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"10\",\n        defaultValue: \"5\",\n        onChange: mooiData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"filter\",\n        onChange: loadData,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"zin\",\n          selected: true,\n          children: \"Hoeveel zin heb je in de techtrack?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verdieping\",\n          children: \"Op welke verdieping studeer je het liefste?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"zuivelproduct\",\n          children: \"Wat is je favoriete zuivelproduct?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"oogkleur\",\n          children: \"Wat is je oogkleur?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dier\",\n          children: \"Wat is je favoriete huisdier?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js"],"names":["d3","data","React","margin","top","bottom","left","right","width","height","count","counts","geteldeArray","loadData","waarde","telData","target","value","invoer","forEach","filter","index","variable","push","x","getal","Object","keys","values","aantal","console","log","select","on","filterData","bereik","filtered_data","d","keer","update","svg","append","attr","groep","xscale","scaleLinear","range","yscale","scaleBand","rangeRound","paddingInner","xaxis","axisTop","scale","g_xaxis","yaxis","axisLeft","g_yaxis","style","text","new_data","domain","max","map","transition","call","rect","selectAll","join","enter","rect_enter","exit","remove","bandwidth","mooiData","Chart"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// import Barchart from './components/Barchart.js'\nimport * as d3 from 'd3';\nimport data from './components/data'\nimport React from 'react';\nconst margin = { top: 50, bottom: 50, left: 150, right: 50 }; // marges om op de grafiek toe te passen\nconst width = 500 - margin.left - margin.right; // breedte\nconst height = 500 - margin.top - margin.bottom; // hoogte\nlet count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\nconst counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\nvar geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\nfunction loadData(waarde){\n    telData(waarde.target.value)\n}\nfunction telData(invoer){\n    let count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\n    const counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\n    var geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n        data.forEach((filter, index) => { // ga door alle regels in het .json bestand heen\n            const variable = data[index][invoer] // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n            count.push(variable) // zet alleen deze vragen in een lege array\n        })\n\n        count.forEach(function (x) { // neem elke regel uit deze array appart\n            counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n        });\n\n        let getal = Object.keys(counts) // de variabelen\n        let waarde = Object.values(counts) // de waarden\n\n        getal.forEach((x, index) => { // van alle variabelen\n\n            const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n            geteldeArray.push({\n                \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n            })\n        })\n        // update(geteldeArray) // update met de bijbehorende  data\nconsole.log(geteldeArray)\n            d3.select('input[type=\"range\"]') //  slider html element\n            .on('change', function () { // als dit veranderd\n                filterData(this.value)\n                \n            });\n            \n            function filterData(bereik) {\n                const filtered_data = geteldeArray.filter((d) => d.keer >= bereik) // filter door de array naar variabelen met een .keer boven de frequentie\n                update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n                // console.log(filtered_data)\n            }\n            const svg = d3.select('main') // selecteer <main> element uit html\n            .append('svg')  // het canvast voor de bar chart\n            .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n            .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n        \n        const groep = svg.append('g')  // maak nieuw group element aan waar alle bars in zitten\n            .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n        \n        const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n        const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n        \n        const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n        const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n        \n        const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n        const g_yaxis = groep.append('g').attr('class', 'y axis');\n        \n        // Label voor verticale  as\n        svg.append(\"text\")\n            .attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n            .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n            .text('Variabele'); // tekst\n        \n        \n        // label voor horizontale as \n        svg.append(\"text\")\n            .attr(\"transform\", \"translate(300,20)\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Aantal keer voorgekomen in enquete\");\n            function update(new_data) { // updaten van de data\n\n                xscale.domain([0, d3.max(new_data, (d) => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n                yscale.domain(new_data.map((d) => d.getal)); // hoeveel bars er moeten zijn\n                g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n                g_yaxis.transition().call(yaxis);\n            \n                const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n            \n                    (enter) => { //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n            \n                        const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n                        return rect_enter;\n            \n                    },\n                    (update) => update,\n                    // wat er gebeurd met de elementen die er al waren\n                    (exit) =>{\n            \n                       return exit.remove() \n                    }// elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n            \n                );\n                rect.transition() // De animatie om soepeler de verandering weer te geven\n                    .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n                    .attr('width', (d) => xscale(d.keer)) // de breedte van de balk\n                    .attr('y', (d) => yscale(d.getal)) // de balk kom te staan bij de variabele\n            }\n            \n            \n            \n            \n            \n            \n            \n}\n\nfunction mooiData(){\n    console.log('mooidata')\n}\n\nfunction Chart() {\n    return (\n\n        <body>\n            <h1>Bar chart mandemt</h1>\n            <div id=\"filter\">\n                <h3>Filter hoe vaak iets mag voorkomen:</h3>\n                <label id=\"range\">\n                    <p>0</p>\n                    <p>1</p>\n                    <p>2</p>\n                    <p>3</p>\n                    <p>4</p>\n                    <p>5</p>\n                    <p>6</p>\n                    <p>7</p>\n                    <p>8</p>\n                    <p>9</p>\n                    <p>10</p>\n                </label>\n\n                <input type=\"range\" min=\"0\" max=\"10\" defaultValue='5' onChange={mooiData}></input>\n\n                <select name=\"filter\" onChange={loadData}>\n                    <option value=\"zin\" selected>Hoeveel zin heb je in de techtrack?</option>\n                    <option value=\"verdieping\">Op welke verdieping studeer je het liefste?</option>\n                    <option value=\"zuivelproduct\">Wat is je favoriete zuivelproduct?</option>\n                    <option value=\"oogkleur\">Wat is je oogkleur?</option>\n                    <option value=\"dier\">Wat is je favoriete huisdier?</option>\n                </select>\n\n            </div>\n            <main> </main>\n        </body>\n\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}