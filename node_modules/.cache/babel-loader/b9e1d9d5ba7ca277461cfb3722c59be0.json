{"ast":null,"code":"import { image } from \"d3-fetch\";\nimport { render } from \"ejs\";\nimport * as d3 from 'd3';\nexport default function request() {\n  var ruweData = []; // Array voor de onbewerkte data\n\n  var schoneData = []; // Array voor opsgeschoonde data\n\n  let request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \n\n  d3.select('input').on('change', function () {\n    console.log(this.value);\n  });\n  request.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Vincent+van+Gogh'); // De link naar de API. Een verschillend id zorgt voor andere resultaten.\n\n  request.onload = function () {\n    // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n    let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n\n    let kleuren = data.facets[6].facets; // Ik haal de specifieke variabele uit de kunstenaar uit id.\n\n    console.log(kleuren);\n    console.log(data);\n    let allekleuren = [];\n    kleuren.forEach(kleur => {\n      // Er wordt over alle (10) kunstwerken heengegaan\n      allekleuren.push(kleur.key);\n    });\n    let vierkant1 = document.querySelector('rect:first-of-type');\n    let vierkant2 = document.querySelector('rect:nth-of-type(2)');\n    let vierkant3 = document.querySelector('rect:nth-of-type(3)');\n    let vierkant4 = document.querySelector('rect:nth-of-type(4)');\n    let vierkant5 = document.querySelector('rect:nth-of-type(5)');\n    const squares = [vierkant1, vierkant2, vierkant3, vierkant4, vierkant5];\n    allekleuren.slice(-5).forEach((kleur, i) => {\n      squares[i].style.backgroundColor = kleur;\n    }); //     schoneData.push({ \"Titel:\": titel, \"Locatie geschidlerd\": locatie[0], \"Afbeelding Link\": afbeelding }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n    // })\n    // console.log(data); // in de console komt nu een overzicht van de oude data en nieuwe data.\n  };\n\n  request.send(); // De aanvraag wordt verstuurd.\n\n  console.log(request);\n}","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/request.js"],"names":["image","render","d3","request","ruweData","schoneData","XMLHttpRequest","select","on","console","log","value","open","onload","data","JSON","parse","response","kleuren","facets","allekleuren","forEach","kleur","push","key","vierkant1","document","querySelector","vierkant2","vierkant3","vierkant4","vierkant5","squares","slice","i","style","backgroundColor","send"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAClC,MAAIC,QAAQ,GAAG,EAAf,CADkC,CACf;;AACnB,MAAIC,UAAU,GAAG,EAAjB,CAFkC,CAEb;;AACrB,MAAIF,OAAO,GAAG,IAAIG,cAAJ,EAAd,CAHkC,CAGE;;AACpCJ,EAAAA,EAAE,CAACK,MAAH,CAAU,OAAV,EACCC,EADD,CACI,QADJ,EACc,YAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,GAHD;AAIAR,EAAAA,OAAO,CAACS,IAAR,CAAa,KAAb,EAAoB,2FAApB,EARkC,CAQ+E;;AACjHT,EAAAA,OAAO,CAACU,MAAR,GAAiB,YAAY;AAAE;AAC3B,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACc,QAAnB,CAAX,CADyB,CACgB;;AACzC,QAAIC,OAAO,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeA,MAA7B,CAFyB,CAEY;;AACzCV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,QAAIM,WAAW,GAAG,EAAlB;AACIF,IAAAA,OAAO,CAACG,OAAR,CAAgBC,KAAK,IAAI;AAAE;AACvBF,MAAAA,WAAW,CAACG,IAAZ,CAAiBD,KAAK,CAACE,GAAvB;AACC,KAFL;AAGD,QAAIC,SAAS,GAAMC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAnB;AACA,QAAIC,SAAS,GAAMF,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAnB;AACA,QAAIE,SAAS,GAAOH,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAApB;AACA,QAAIG,SAAS,GAAOJ,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAApB;AACA,QAAII,SAAS,GAAOL,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAApB;AAEA,UAAMK,OAAO,GAAG,CAACP,SAAD,EAAWG,SAAX,EAAqBC,SAArB,EAA+BC,SAA/B,EAAyCC,SAAzC,CAAhB;AAEFX,IAAAA,WAAW,CAACa,KAAZ,CAAkB,CAAC,CAAnB,EAAsBZ,OAAtB,CAA8B,CAACC,KAAD,EAAQY,CAAR,KAAc;AACxCF,MAAAA,OAAO,CAACE,CAAD,CAAP,CAAWC,KAAX,CAAiBC,eAAjB,GAAmCd,KAAnC;AACH,KAFD,EAjB4B,CAqBzB;AAEA;AACA;AAEH,GA1BD;;AA2BAnB,EAAAA,OAAO,CAACkC,IAAR,GApCkC,CAoCnB;;AACf5B,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACC","sourcesContent":["import { image } from \"d3-fetch\";\nimport { render } from \"ejs\";\nimport * as d3 from 'd3';\n\nexport default function request() {\nvar ruweData = []; // Array voor de onbewerkte data\nvar schoneData = []; // Array voor opsgeschoonde data\nlet request = new XMLHttpRequest(); // de aanvraag naar de data van de API wordt aangevraagd \nd3.select('input')\n.on('change', function() {\n    console.log(this.value)\n})\nrequest.open('GET', 'https://www.rijksmuseum.nl/api/nl/collection/?key=N7PX59OF&involvedMaker=Vincent+van+Gogh') // De link naar de API. Een verschillend id zorgt voor andere resultaten.\nrequest.onload = function () { // Als het request wordt uitgevoerd zal deze anonieme functie worden uitgevoerd.\n    let data = JSON.parse(request.response); // string uit de API wordt omgezet als JS object\n    let kleuren = data.facets[6].facets; // Ik haal de specifieke variabele uit de kunstenaar uit id.\nconsole.log(kleuren)\nconsole.log(data)\nlet allekleuren = []\n    kleuren.forEach(kleur => { // Er wordt over alle (10) kunstwerken heengegaan\n        allekleuren.push(kleur.key)\n        })\n   let vierkant1 =    document.querySelector('rect:first-of-type')\n   let vierkant2 =    document.querySelector('rect:nth-of-type(2)')\n   let vierkant3 =     document.querySelector('rect:nth-of-type(3)')\n   let vierkant4 =     document.querySelector('rect:nth-of-type(4)')\n   let vierkant5 =     document.querySelector('rect:nth-of-type(5)')\n    \n   const squares = [vierkant1,vierkant2,vierkant3,vierkant4,vierkant5]\n\n allekleuren.slice(-5).forEach((kleur, i) => {\n     squares[i].style.backgroundColor = kleur\n })\n\n    //     schoneData.push({ \"Titel:\": titel, \"Locatie geschidlerd\": locatie[0], \"Afbeelding Link\": afbeelding }); // De opsgeschoonde data wordt naar de nieuwe array gestuurd.\n\n    // })\n    // console.log(data); // in de console komt nu een overzicht van de oude data en nieuwe data.\n \n}\nrequest.send() // De aanvraag wordt verstuurd.\nconsole.log(request)\n}\n\n"]},"metadata":{},"sourceType":"module"}