{"ast":null,"code":"var _jsxFileName = \"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Barchart from './components/Barchart.js';\nimport * as d3 from 'd3';\nimport data from './components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const margin = {\n    top: 50,\n    bottom: 50,\n    left: 150,\n    right: 50\n  }; // marges om op de grafiek toe te passen\n\n  const width = 500 - margin.left - margin.right; // breedte\n\n  const height = 500 - margin.top - margin.bottom; // hoogte\n\n  d3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n  .on('change', function () {\n    // als er verandering wordt aangebracht\n    let count = []; // nieuwe array met alle geselecteerde antwoorden uit de dataset\n\n    const counts = []; // nieuwe array met alle getelde geselecteerde antwoorden\n\n    var geteldeArray = []; // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n    let vraag = this.value; // De gefilterde vraag\n\n    data.forEach((filter, index) => {\n      // ga door alle regels in het .json bestand heen\n      const variable = data[index][vraag]; // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n\n      count.push(variable); // zet alleen deze vragen in een lege array\n    });\n    count.forEach(function (x) {\n      // neem elke regel uit deze array appart\n      counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n    });\n    let getal = Object.keys(counts); // de variabelen\n\n    let waarde = Object.values(counts); // de waarden\n\n    getal.forEach((x, index) => {\n      // van alle variabelen\n      const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n      geteldeArray.push({\n        \"getal\": x,\n        \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n\n      });\n    });\n    d3.select('input[type=\"range\"]') //  slider html element\n    .on('change', function () {\n      // als dit veranderd\n      let frequentie = this.value; // de geselecteerde frequentie is het nummer in de slider\n\n      const filtered_data = geteldeArray.filter(d => d.keer >= frequentie); // filter door de array naar variabelen met een .keer boven de frequentie\n\n      update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n    });\n    update(geteldeArray); // update met de bijbehorende  data\n  });\n  const svg = d3.select('main') // selecteer <main> element uit html\n  .append('svg') // het canvast voor de bar chart\n  .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n  .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\n  const groep = svg.append('g') // maak nieuw group element aan waar alle bars in zitten\n  .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\n  const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n\n  const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\n  const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n\n  const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\n  const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n\n  const g_yaxis = groep.append('g').attr('class', 'y axis'); // Label voor verticale  as\n\n  svg.append(\"text\").attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n  .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n  .text('Variabele'); // tekst\n  // label voor horizontale as \n\n  svg.append(\"text\").attr(\"transform\", \"translate(300,20)\").style(\"text-anchor\", \"middle\").text(\"Aantal keer voorgekomen in enquete\");\n\n  function update(new_data) {\n    // updaten van de data\n    xscale.domain([0, d3.max(new_data, d => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n\n    yscale.domain(new_data.map(d => d.getal)); // hoeveel bars er moeten zijn\n\n    g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n\n    g_yaxis.transition().call(yaxis);\n    const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n    enter => {\n      //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n      const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n\n      return rect_enter;\n    }, update => update, // wat er gebeurd met de elementen die er al waren\n    exit => {\n      return exit.remove();\n    } // elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n    );\n    rect.transition() // De animatie om soepeler de verandering weer te geven\n    .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n    .attr('width', d => xscale(d.keer)) // de breedte van de balk\n    .attr('y', d => yscale(d.getal)); // de balk kom te staan bij de variabele\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bar chart mandemt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter hoe vaak iets mag voorkomen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"range\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"10\",\n          value: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"zin\",\n            selected: true,\n            children: \"Hoeveel zin heb je in de techtrack?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"verdieping\",\n            children: \"Op welke verdieping studeer je het liefste?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"zuivelproduct\",\n            children: \"Wat is je favoriete zuivelproduct?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"oogkleur\",\n            children: \"Wat is je oogkleur?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dier\",\n            children: \"Wat iis je favoriete huisdier?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js"],"names":["Barchart","d3","data","App","margin","top","bottom","left","right","width","height","select","on","count","counts","geteldeArray","vraag","value","forEach","filter","index","variable","push","x","getal","Object","keys","waarde","values","aantal","frequentie","filtered_data","d","keer","update","svg","append","attr","groep","xscale","scaleLinear","range","yscale","scaleBand","rangeRound","paddingInner","xaxis","axisTop","scale","g_xaxis","yaxis","axisLeft","g_yaxis","style","text","new_data","domain","max","map","transition","call","rect","selectAll","join","enter","rect_enter","exit","remove","bandwidth"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAIA,SAASC,GAAT,GAAe;AACb,QAAMC,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE,GAA7B;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GAAf,CADa,CACiD;;AAC9D,QAAMC,KAAK,GAAG,MAAML,MAAM,CAACG,IAAb,GAAoBH,MAAM,CAACI,KAAzC,CAFa,CAEmC;;AAChD,QAAME,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACE,MAAzC,CAHa,CAGoC;;AAEjDL,EAAAA,EAAE,CAACU,MAAH,CAAU,QAAV,EAAoB;AAApB,GACGC,EADH,CACM,QADN,EACgB,YAAY;AAAE;AAC1B,QAAIC,KAAK,GAAG,EAAZ,CADwB,CACT;;AACf,UAAMC,MAAM,GAAG,EAAf,CAFwB,CAEN;;AAClB,QAAIC,YAAY,GAAG,EAAnB,CAHwB,CAGF;;AAEtB,QAAIC,KAAK,GAAG,KAAKC,KAAjB,CALwB,CAKD;;AAEvBf,IAAAA,IAAI,CAACgB,OAAL,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAE;AAChC,YAAMC,QAAQ,GAAGnB,IAAI,CAACkB,KAAD,CAAJ,CAAYJ,KAAZ,CAAjB,CAD8B,CACM;;AACpCH,MAAAA,KAAK,CAACS,IAAN,CAAWD,QAAX,EAF8B,CAET;AACtB,KAHD;AAKAR,IAAAA,KAAK,CAACK,OAAN,CAAc,UAAUK,CAAV,EAAa;AAAE;AAC3BT,MAAAA,MAAM,CAACS,CAAD,CAAN,GAAY,CAACT,MAAM,CAACS,CAAD,CAAN,IAAa,CAAd,IAAmB,CAA/B,CADyB,CACS;AACnC,KAFD;AAIA,QAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYZ,MAAZ,CAAZ,CAhBwB,CAgBQ;;AAChC,QAAIa,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAcd,MAAd,CAAb,CAjBwB,CAiBW;;AAEnCU,IAAAA,KAAK,CAACN,OAAN,CAAc,CAACK,CAAD,EAAIH,KAAJ,KAAc;AAAE;AAE5B,YAAMS,MAAM,GAAGF,MAAM,CAACP,KAAD,CAArB,CAF0B,CAEI;;AAE9BL,MAAAA,YAAY,CAACO,IAAb,CAAkB;AAChB,iBAASC,CADO;AACJ,gBAAQM,MADJ,CACW;;AADX,OAAlB;AAGD,KAPD;AASA5B,IAAAA,EAAE,CAACU,MAAH,CAAU,qBAAV,EAAiC;AAAjC,KACGC,EADH,CACM,QADN,EACgB,YAAY;AAAE;AAC1B,UAAIkB,UAAU,GAAG,KAAKb,KAAtB,CADwB,CACI;;AAC5B,YAAMc,aAAa,GAAGhB,YAAY,CAACI,MAAb,CAAqBa,CAAD,IAAOA,CAAC,CAACC,IAAF,IAAUH,UAArC,CAAtB,CAFwB,CAE+C;;AACvEI,MAAAA,MAAM,CAACH,aAAD,CAAN,CAHwB,CAGD;AACxB,KALH;AAOAG,IAAAA,MAAM,CAACnB,YAAD,CAAN,CAnCwB,CAmCH;AACtB,GArCH;AAwCA,QAAMoB,GAAG,GAAGlC,EAAE,CAACU,MAAH,CAAU,MAAV,EAAkB;AAAlB,GACTyB,MADS,CACF,KADE,EACM;AADN,GAETC,IAFS,CAEJ,OAFI,EAEK5B,KAAK,GAAGL,MAAM,CAACG,IAAf,GAAsBH,MAAM,CAACI,KAFlC,EAEyC;AAFzC,GAGT6B,IAHS,CAGJ,QAHI,EAGM3B,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACE,MAHnC,CAAZ,CA7Ca,CAgD2C;;AAExD,QAAMgC,KAAK,GAAGH,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAiB;AAAjB,GACXC,IADW,CACN,WADM,EACQ,aAAYjC,MAAM,CAACG,IAAK,IAAGH,MAAM,CAACC,GAAI,GAD9C,CAAd,CAlDa,CAmDoD;;AAEjE,QAAMkC,MAAM,GAAGtC,EAAE,CAACuC,WAAH,GAAiBC,KAAjB,CAAuB,CAAC,CAAD,EAAIhC,KAAJ,CAAvB,CAAf,CArDa,CAqDsC;;AACnD,QAAMiC,MAAM,GAAGzC,EAAE,CAAC0C,SAAH,GAAeC,UAAf,CAA0B,CAAC,CAAD,EAAIlC,MAAJ,CAA1B,EAAuCmC,YAAvC,CAAoD,GAApD,CAAf,CAtDa,CAsD4D;;AAEzE,QAAMC,KAAK,GAAG7C,EAAE,CAAC8C,OAAH,GAAaC,KAAb,CAAmBT,MAAnB,CAAd,CAxDa,CAwD6B;;AAC1C,QAAMU,OAAO,GAAGX,KAAK,CAACF,MAAN,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,OAAvB,EAAgC,QAAhC,CAAhB,CAzDa,CAyD8C;;AAE3D,QAAMa,KAAK,GAAGjD,EAAE,CAACkD,QAAH,GAAcH,KAAd,CAAoBN,MAApB,CAAd,CA3Da,CA2D8B;;AAC3C,QAAMU,OAAO,GAAGd,KAAK,CAACF,MAAN,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,OAAvB,EAAgC,QAAhC,CAAhB,CA5Da,CA8Db;;AACAF,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EACGC,IADH,CACQ,WADR,EACqB,6BADrB,EACoD;AADpD,GAEGgB,KAFH,CAES,aAFT,EAEwB,QAFxB,EAEkC;AAFlC,GAGGC,IAHH,CAGQ,WAHR,EA/Da,CAkES;AAGtB;;AACAnB,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EACGC,IADH,CACQ,WADR,EACqB,mBADrB,EAEGgB,KAFH,CAES,aAFT,EAEwB,QAFxB,EAGGC,IAHH,CAGQ,oCAHR;;AAKA,WAASpB,MAAT,CAAgBqB,QAAhB,EAA0B;AAAE;AAE1BhB,IAAAA,MAAM,CAACiB,MAAP,CAAc,CAAC,CAAD,EAAIvD,EAAE,CAACwD,GAAH,CAAOF,QAAP,EAAkBvB,CAAD,IAAOA,CAAC,CAACC,IAA1B,CAAJ,CAAd,EAFwB,CAE6B;;AACrDS,IAAAA,MAAM,CAACc,MAAP,CAAcD,QAAQ,CAACG,GAAT,CAAc1B,CAAD,IAAOA,CAAC,CAACR,KAAtB,CAAd,EAHwB,CAGqB;;AAC7CyB,IAAAA,OAAO,CAACU,UAAR,GAAqBC,IAArB,CAA0Bd,KAA1B,EAJwB,CAIU;;AAClCM,IAAAA,OAAO,CAACO,UAAR,GAAqBC,IAArB,CAA0BV,KAA1B;AAEA,UAAMW,IAAI,GAAGvB,KAAK,CAACwB,SAAN,CAAgB,MAAhB,EAAwB5D,IAAxB,CAA6BqD,QAA7B,EAAuCQ,IAAvC,EAA6C;AAEvDC,IAAAA,KAAD,IAAW;AAAE;AAEX,YAAMC,UAAU,GAAGD,KAAK,CAAC5B,MAAN,CAAa,MAAb,EAAqBC,IAArB,CAA0B,GAA1B,EAA+B,CAA/B,CAAnB,CAFS,CAE6C;;AACtD,aAAO4B,UAAP;AAED,KAPU,EAQV/B,MAAD,IAAYA,MARD,EASX;AACCgC,IAAAA,IAAD,IAAU;AAER,aAAOA,IAAI,CAACC,MAAL,EAAP;AACD,KAbU,CAaV;AAbU,KAAb;AAgBAN,IAAAA,IAAI,CAACF,UAAL,GAAkB;AAAlB,KACGtB,IADH,CACQ,QADR,EACkBK,MAAM,CAAC0B,SAAP,EADlB,EACsC;AADtC,KAEG/B,IAFH,CAEQ,OAFR,EAEkBL,CAAD,IAAOO,MAAM,CAACP,CAAC,CAACC,IAAH,CAF9B,EAEwC;AAFxC,KAGGI,IAHH,CAGQ,GAHR,EAGcL,CAAD,IAAOU,MAAM,CAACV,CAAC,CAACR,KAAH,CAH1B,EAvBwB,CA0Ba;AACtC;;AACD,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAgBE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,GAAG,EAAC,GAAxB;AAA4B,UAAA,GAAG,EAAC,IAAhC;AAAqC,UAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAkBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAoB,YAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsCD;;KA7IQrB,G;AAgJT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Barchart from './components/Barchart.js'\nimport * as d3 from 'd3';\nimport data from './components/data'\n\n\n\nfunction App() {\n  const margin = { top: 50, bottom: 50, left: 150, right: 50 }; // marges om op de grafiek toe te passen\n  const width = 500 - margin.left - margin.right; // breedte\n  const height = 500 - margin.top - margin.bottom; // hoogte\n\n  d3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n    .on('change', function () { // als er verandering wordt aangebracht\n      let count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\n      const counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\n      var geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n      let vraag = this.value // De gefilterde vraag\n\n      data.forEach((filter, index) => { // ga door alle regels in het .json bestand heen\n        const variable = data[index][vraag] // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n        count.push(variable) // zet alleen deze vragen in een lege array\n      })\n\n      count.forEach(function (x) { // neem elke regel uit deze array appart\n        counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n      });\n\n      let getal = Object.keys(counts) // de variabelen\n      let waarde = Object.values(counts) // de waarden\n\n      getal.forEach((x, index) => { // van alle variabelen\n\n        const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n        geteldeArray.push({\n          \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n        })\n      })\n\n      d3.select('input[type=\"range\"]') //  slider html element\n        .on('change', function () { // als dit veranderd\n          let frequentie = this.value // de geselecteerde frequentie is het nummer in de slider\n          const filtered_data = geteldeArray.filter((d) => d.keer >= frequentie) // filter door de array naar variabelen met een .keer boven de frequentie\n          update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n        });\n\n      update(geteldeArray) // update met de bijbehorende  data\n    })\n\n\n  const svg = d3.select('main') // selecteer <main> element uit html\n    .append('svg')  // het canvast voor de bar chart\n    .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n    .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\n  const groep = svg.append('g')  // maak nieuw group element aan waar alle bars in zitten\n    .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\n  const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n  const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\n  const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n  const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\n  const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n  const g_yaxis = groep.append('g').attr('class', 'y axis');\n\n  // Label voor verticale  as\n  svg.append(\"text\")\n    .attr(\"transform\", \"translate(10,250)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n    .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n    .text('Variabele'); // tekst\n\n\n  // label voor horizontale as \n  svg.append(\"text\")\n    .attr(\"transform\", \"translate(300,20)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(\"Aantal keer voorgekomen in enquete\");\n\n  function update(new_data) { // updaten van de data\n\n    xscale.domain([0, d3.max(new_data, (d) => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n    yscale.domain(new_data.map((d) => d.getal)); // hoeveel bars er moeten zijn\n    g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n    g_yaxis.transition().call(yaxis);\n\n    const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n\n      (enter) => { //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n\n        const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n        return rect_enter;\n\n      },\n      (update) => update,\n      // wat er gebeurd met de elementen die er al waren\n      (exit) => {\n\n        return exit.remove()\n      }// elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n\n    );\n    rect.transition() // De animatie om soepeler de verandering weer te geven\n      .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n      .attr('width', (d) => xscale(d.keer)) // de breedte van de balk\n      .attr('y', (d) => yscale(d.getal)) // de balk kom te staan bij de variabele\n  }\n  return (\n    <>\n      <body>\n        <h1>Bar chart mandemt</h1>\n        <div id=\"filter\">\n          <h3>Filter hoe vaak iets mag voorkomen:</h3>\n          <label id=\"range\">\n            <p>0</p>\n            <p>1</p>\n            <p>2</p>\n            <p>3</p>\n            <p>4</p>\n            <p>5</p>\n            <p>6</p>\n            <p>7</p>\n            <p>8</p>\n            <p>9</p>\n            <p>10</p>\n          </label>\n\n          <input type=\"range\" min=\"0\" max=\"10\" value=\"5\">\n          </input>\n          <select name=\"filter\">\n            <option value=\"zin\" selected>Hoeveel zin heb je in de techtrack?</option>\n            <option value=\"verdieping\">Op welke verdieping studeer je het liefste?</option>\n            <option value=\"zuivelproduct\">Wat is je favoriete zuivelproduct?</option>\n            <option value=\"oogkleur\">Wat is je oogkleur?</option>\n            <option value=\"dier\">Wat iis je favoriete huisdier?</option>\n          </select>\n\n        </div>\n        <main> </main>\n      </body>\n    </>\n  )\n\n\n \n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}