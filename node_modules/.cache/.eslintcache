[{"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/index.js":"1","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js":"2","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/reportWebVitals.js":"3","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/header.js":"4","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/footer.js":"5","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/grafiek.js":"6","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/apidata.js":"7","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/request.js":"8","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/apikey.js":"9","/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/createchart.js":"10"},{"size":288,"mtime":1638268143074,"results":"11","hashOfConfig":"12"},{"size":264,"mtime":1638458626936,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1638452585180,"results":"14","hashOfConfig":"12"},{"size":908,"mtime":1638457132140,"results":"15","hashOfConfig":"12"},{"size":749,"mtime":1638459149056,"results":"16","hashOfConfig":"12"},{"size":1270,"mtime":1638455899843,"results":"17","hashOfConfig":"12"},{"size":672,"mtime":1638459041885,"results":"18","hashOfConfig":"12"},{"size":1623,"mtime":1638458975398,"results":"19","hashOfConfig":"12"},{"size":32,"mtime":1638458928083,"results":"20","hashOfConfig":"12"},{"size":5480,"mtime":1638451873689,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uqaer5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/index.js",[],["44","45"],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/App.js",[],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/reportWebVitals.js",[],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/header.js",[],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/footer.js",["46","47","48","49","50"],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/grafiek.js",[],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/pages/apidata.js",["51"],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/request.js",["52","53","54"],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/apikey.js",[],"/Users/tomplaneet/Desktop/techtrack/fp/tt-fa/src/components/createchart.js",["55"],"import data from './data'\nimport * as d3 from 'd3';\nexport function createChart(e) {\n    e.target.disabled = true\n    const margin = { top: 50, bottom: 50, left: 150, right: 50 }; // marges om op de grafiek toe te passen\n    const width = 500 - margin.left - margin.right; // breedte\n    const height = 300 - margin.top - margin.bottom; // hoogte\n    const svg = d3.select('main') // selecteer <main> element uit html\n        .append('svg')  // het canvas voor de bar chart\n        .attr('width', width + margin.left + margin.right) // de breedte van het svg element\n        .attr('height', height + margin.top + margin.bottom); // de hoogte van het svg element\n\n    const groep = svg.append('g')  // maak nieuw group element aan waar alle bars in zitten\n        .attr('transform', `translate(${margin.left},${margin.top})`); // positionering van het group element\n\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(10,150)rotate(90)\") // 90 graden draaien en aan de zijkant van de bar chart zetten\n        .style(\"text-anchor\", \"middle\") // tekst moet in het midden staan\n        .text('Variabele'); // tekst\n\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(250,20)\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Aantal keer voorgekomen in enquete\");\n\n\n    const xscale = d3.scaleLinear().range([0, width]); // over hoeveel pixels de bar width verdeeld worden\n    const yscale = d3.scaleBand().rangeRound([0, height]).paddingInner(0.1); // over hoeveel pixels de bar height verdeelt worden met tussenruimte\n\n    const xaxis = d3.axisTop().scale(xscale); // de horizontale as maken zodat er ook lijnen komen te staan\n    const g_xaxis = groep.append('g').attr('class', 'x axis'); // deze as wordt een group met door d3 geintegreerde elementen zoals ticks en getallen\n\n    const yaxis = d3.axisLeft().scale(yscale); // de verticale as  met getallen aan de linkerkant\n    const g_yaxis = groep.append('g').attr('class', 'y axis');\n\n    const bereikende = document.querySelector('input[type=\"range\"]') //  slider html element\n\n    d3.select('select') // selecteer het HTML element <select> (ook wel het filter)\n        .on('change', function () { // als er verandering wordt aangebracht\n            telData(this.value)\n            bereikende.value=\"0\"\n\n        })\n\n\nfunction telData(invoer) {\n        let count = [] // nieuwe array met alle geselecteerde antwoorden uit de dataset\n        const counts = [] // nieuwe array met alle getelde geselecteerde antwoorden\n\n        data.forEach((filter, index) => { // ga door alle regels in het .json bestand heen\n            const variable = data[index][invoer] // zoek de variabelen die voldoen aan de waarde die is aangegeven in <select>\n            count.push(variable) // zet alleen deze vragen in een lege array\n        })\n\n        count.forEach(function (x) { // neem elke regel uit deze array appart\n            counts[x] = (counts[x] || 0) + 1; // voor iedere keer dat iets voorkomt, wordt de waarde +1\n        });\nnetteData(counts)\n    }\n\n    function netteData(counts) {\n        let geteldeArray = [] // nieuwe array om met bijbehorende labels zodat ook string gebruikt kan worden\n\n        let getal = Object.keys(counts) // de variabelen\n        let waarde = Object.values(counts) // de waarden\n\n        getal.forEach((x, index) => { // van alle variabelen\n\n            const aantal = waarde[index]; // hoevaak het voorkomt is de waarde van de variabele\n\n            geteldeArray.push({\n                \"getal\": x, \"keer\": aantal // in de nieuwe array wordt de data netjes gepresenteerd\n            })\n        })\n        update(geteldeArray) // update met de bijbehorende  data\n\n        const bereikende = d3.select('input[type=\"range\"]') //  slider html element\n            .on('change', function () { // als dit veranderd\n                filterData(this.value, geteldeArray)\n            });\n    }\n\n\n    function filterData(bereik, arr) {\n        const filtered_data = arr.filter((d) => d.keer >= bereik) // filter door de array naar variabelen met een .keer boven de frequentie\n        update(filtered_data); // gebruik deze data voor de nieuwe bar chart\n    }\n\n\nfunction update(new_data) { // updaten van de data\n\n    xscale.domain([0, d3.max(new_data, (d) => d.keer)]); // over welke getallen de bars verdeeld moeten worden\n    yscale.domain(new_data.map((d) => d.getal)); // hoeveel bars er moeten zijn\n    g_xaxis.transition().call(xaxis); // soepele overgang en de as aanpassen op de nieuwe data\n    g_yaxis.transition().call(yaxis);\n\n    const rect = groep.selectAll('rect').data(new_data).join( // omvat de gebeurtenissen met de data \n\n        (enter) => { //  alle data die nog niet gevisualiseerd is en gemaakt moet worden\n\n            const rect_enter = enter.append('rect').attr('x', 0); // zorg dat de bar een <rect> element is die 0 pixels van de x as staat\n            return rect_enter;\n\n        },\n        (update) => update,\n        // wat er gebeurd met de elementen die er al waren\n        (exit) => {\n\n            return exit.remove()\n        }// elementen die verdwenen zijn moeten uit de visualisatie gehaald worden met exit\n\n    );\n\n    rect.transition() // De animatie om soepeler de verandering weer te geven\n        .attr('height', yscale.bandwidth()) // hoe hoog de balk is ten opzichte van de andere data\n        .attr('width', (d) => xscale(d.keer)) // de breedte van de balk\n        .attr('y', (d) => yscale(d.getal)) // de balk kom te staan bij de variabele\n}\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":13,"nodeType":"62","messageId":"63","endLine":2,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":5,"column":22,"nodeType":"62","messageId":"63","endLine":5,"endColumn":28},{"ruleId":"60","severity":1,"message":"65","line":6,"column":5,"nodeType":"62","messageId":"63","endLine":6,"endColumn":10},{"ruleId":"60","severity":1,"message":"66","line":7,"column":5,"nodeType":"62","messageId":"63","endLine":7,"endColumn":9},{"ruleId":"60","severity":1,"message":"67","line":8,"column":15,"nodeType":"62","messageId":"63","endLine":8,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":3,"column":13,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"60","severity":1,"message":"68","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":15},{"ruleId":"60","severity":1,"message":"69","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":3,"column":13,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"60","severity":1,"message":"70","line":77,"column":15,"nodeType":"62","messageId":"63","endLine":77,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'d3' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'image' is defined but never used.","'render' is defined but never used.","'bereikende' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]